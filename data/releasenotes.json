[
	{
		"version": "alpha/2024-11-05",
		"date": "2024-11-05",
		"breaksdb": false,
		"notes": [
			"<b>New Feature:</b> Improved internal memory allocation: CedarDB now tracks memory consumption during query execution and aborts queries consuming too much working memory.",
			"<b>New Feature:</b> Add <tt>VACUUM</tt> statement. It manually triggers data compression of newly inserted data that hasn't been queried often yet.",
			"<b>Performance:</b> Greatly speed up queries of the pattern <tt> SELECT * FROM foo LIMIT 1</tt>.",
			"<b>Performance:</b> Improve estimates on tables with unique constraints.",
			"<b>Performance:</b> Reduce write-ahead log size. CedarDB now tries to prune the log much more eagerly to reduce disk space consumption.",
			"<b>PostgreSQL compatibility:</b> Add name datatype to <tt>pg_type</tt> system table. Required by some ORMs using JDBC (e.g., \"Exposed\") to infer maximum length of table names and columns.",
			"<b>PostgreSQL compatibility:</b> Allow parsing dates from strings specifying a full timestamp. Used by some ORMs such as \"Exposed\" to construct dates.",
			"<b>Maintenance:</b> Fix case where created functions couldn't be dropped.",
			"<b>Maintenance:</b> Fix deadlock when client connection unexpectedly drops.",
			"<b>Maintenance:</b> Upgraded to LLVM 19.",
			"Various bug fixes, stability, and performance improvements."
		]
	},
	{
		"version": "alpha/2024-10-17",
		"date": "2024-10-17",
		"breaksdb": false,
		"notes": [
			"<b>Maintenance:</b> Stability fix for replanning prepared statements with UPSERTs."
		]
	},
	{
		"version": "alpha/2024-10-16",
		"date": "2024-10-16",
		"breaksdb": false,
		"notes": [
			"<b>Maintenance:</b> Check for newer CedarDB versions on Docker startup.",
			"<b>Maintenance:</b> Fix rare cases of lost tuples in UPSERT queries.",
			"<b>Maintenance:</b> Use consistent sort order for BLOB types.",
			"<b>Performance:</b> Lazily compile prepared statements.",
			"<b>PostgreSQL compatibility:</b> Use PostgreSQL-compliant BigNumeric type truncation.",
			"<b>PostgreSQL compatibility:</b> Support <tt>regclass</tt> casts for system tables.",
			"Various bug fixes, stability, and performance improvements."
		]
	},
	{
		"version": "alpha/2024-10-11",
		"date": "2024-10-11",
		"breaksdb": false,
		"notes": [
			"<b>New Feature:</b> Added support for <a href=/docs/references/advanced/asof_join/ target=_blank>AsOf joins</a>.",
			"<b>New Feature:</b> Added support for <a href=/docs/references/sqlreference/statements/upsert target=_blank>upserts</a> through <tt>ON CONFLICT DO UPDATE</tt> and <tt>ON CONFLICT DO NOTHING</tt>.",
			"<b>New Feature:</b> Added support for additional <a href=/docs/references/sqlreference/functions/aggregation/ target=_blank>aggregation functions</a>.",
			"<b>Maintenance:</b> Update the timezone database to version 2024b.",
			"<b>Maintenance:</b> Fix daylight savings time handling for regions with daylight savings differences other than 1 hour.",
			"<b>Performance:</b> Improve join unnesting for dependent joins.",
			"<b>Performance:</b> Various cardinality estimation improvements.",
			"<b>Performance:</b> Add vectorization support for pg_vector-type cosine distance calcultions.",
			"<b>Performance:</b> Lazily compile user-defined functions.",
			"<b>PostgreSQL compatibility:</b> Support array-constructing subqueries: <tt>select array(values(1),(1));</tt> returns <tt>{1,1}</tt>.",
			"<b>PostgreSQL compatibility:</b> Added <tt>has_column_privilege()</tt> function.",
			"<b>PostgreSQL compatibility:</b> Added <tt>has_function_privilege()</tt> function.",
			"<b>PostgreSQL compatibility:</b> Improve output of <tt>pg_attribute</tt> system table.",
			"<b>PostgreSQL compatibility:</b> Improve output of <tt>pg_type</tt> system table.",
			"<b>PostgreSQL compatibility:</b> Full support for <tt>pg_timezone_names</tt> system table.",
			"<b>PostgreSQL compatibility:</b> Full support for <tt>pg_timezone_abbrevs</tt> system table.",
			"<b>PostgreSQL compatibility:</b> Added support for <tt>default</tt> keyword in <tt>INSERT</tt> statements.",
			"<b>PostgreSQL compatibility:</b> Use PostgreSQL-compliant sort order for <tt>bytea</tt> type.",
			"<b>PostgreSQL compatibility:</b> Fix output of <tt>current_schema()</tt> function.",
			"Various bug fixes, stability, and performance improvements."
		]
	},
	{
		"version": "alpha/2024-09-13",
		"date": "2024-09-13",
		"breaksdb": true,
		"notes": [
			"<b>New Feature:</b> Implemented the functionality of the <a href=https://github.com/pgvector/pgvector>pgvector</a> extension. For a feature description take a look at the <a href=../references/datatypes/vector>vector datatype reference</a>, the <a href=../references/advanced/pgvector>pgvector extension compatibility docs</a>, or follow <a href=../example_datasets/glove>our new vector tutorial</a>.",
			"<b>New Feature:</b> Restructured database file storage: All files of a given database are stored in the same directory to declutter your server. Existing database files will be converted to the new format automatically on startup, no manual intervention required.",
			"<b>New Feature:</b> Added support for quantified expressions over subqueries and arrays: <br /> <tt>with tmp(x) as (select array[1,2,3]) select 1 = ANY(x) from tmp</tt>.",
			"<b>New Feature:</b> Implicitly cast string constants in binary expressions: You can now, for example, write <tt> 123 + '456'</tt>.",
			"<b>New Feature:</b> Better type deduction for unknown types: Parameters now seamlessly work in function calls. For example <tt>lower($1)</tt> now treats the parameter as a string.",
			"<b>New Feature:</b> Added support for row results in subqueries and non constant arrays: <br /> <tt>select (r.r).\"2\", (r.r).\"1\", (r.r).\"0\" from (select row('foo','bar','baz')) r(r)\"</tt> returns <tt> baz bar foo </tt>.",
			"<b>Maintenance:</b> Introduce recovery log versioning to reduce the likelihood of having to break backwards compatibility in the future.",
			"<b>Performance:</b> Optimizer: Improved cardinality estimation for very selective predicates. This sometimes improves execution plans, where we observed cases of 10x speedup",
			"<b>Performance:</b> Implemented a heuristic that inlines CTEs that materialize a large state but are cheap to recalculate. This improves TPC-DS Q95's performance by about 10x, for example.",
			"<b>Performance:</b> More aggressively use band joins where beneficial, even if the query does not contain <tt>between</tt> conditions.",
			"<b>Performance:</b> Optimize concat calls with single arguments: <tt> concat(x)</tt> becomes <tt> cast(x as text)</tt>.",
			"<b>PostgreSQL compatibility:</b> Honor Postgres <tt>AS NOT MATERIALIZED</tt> hint in CTEs.",
			"<b>PostgreSQL compatibility:</b> Timestamp calculations are now done in UTC instead of local time in accordance with the Postgres docs.",
			"<b>PostgreSQL compatibility:</b> When adding intervals to timestamps, the months, days, and microseconds fields of the interval value are handled in turn.",
			"<b>PostgreSQL compatibility:</b> Correctly output regclass and regtype names: For example, <tt>pg_typeof(42)</tt> now returns <tt>'int4'</tt> instead of a cryptic identifier.",
			"<b>PostgreSQL compatibility:</b> <tt>trim()</tt> now allows for Postgres' alternative syntax: Instead of <tt>trim('x' from 'xfoox')</tt> you can now also write <tt>trim('xfoox','x')</tt>.",
			"<b>PostgreSQL compatibility:</b> Added <tt>to_regtype()</tt> function.",
			"<b>PostgreSQL compatibility:</b> Added <tt>pg_typeof()</tt> function.",
			"<b>PostgreSQL compatibility:</b> Added <tt>nameconcatoid()</tt> function.",
			"Various bug fixes, stability, and performance improvements."
		]
	},

	{
		"version": "alpha/2024-07-24",
		"date": "2024-07-24",
		"breaksdb": true,
		"notes": [
			"<b>Maintenance:</b> Split data file and schema version numbering to reduce the likelihood of having to break backwards compatibility in the future",
			"<b>PostgreSQL compatibility:</b> Full support for all PostgreSQL timezone abbreviations",
			"<b>PostgreSQL compatibility:</b> Parse (not-) materialized Common Table Expression hints",
			"<b>PostgreSQL compatibility:</b> Added for pg_proc system table",
			"<b>PostgreSQL compatibility:</b> Added pg_function_is_visible() function",
			"Various bug fixes and stability improvements"
			 
		]
	},
	{
		"version": "alpha/2024-07-12",
		"date": "2024-07-12",
		"notes": [
			"<b>New Feature:</b> Support for SQL UDF table functions in SELECT statements",
			"<b>New Feature:</b> Allow creating and releasing SAVEPOINTs within transactions",
			"<b>New Feature:</b> Support quantified expressions over constant arrays",
			"<b>New Feature:</b> Support 'ON CONFLICT DO NOTHING' for upserts",
			"<b>PostgreSQL compatibility:</b> Support for parsing 'COPY FREEZE' performance hint",
			"<b>PostgreSQL compatibility:</b> Support for compound date styles",
			"<b>PostgreSQL compatibility:</b> The pg_class system table now also shows views",
			"<b>PostgreSQL compatibility:</b> The pg_constraint system table now also shows indexes",
			"<b>PostgreSQL compatibility:</b> Added pg_relation_is_updateable() function",
			"<b>PostgreSQL compatibility:</b> Added pg_my_temp_schema()",
			"<b>PostgreSQL compatibility:</b> Added pg_description system table",
			"<b>PostgreSQL compatibility:</b> Added has_schema_privileges() function",
			"<b>PostgreSQL compatibility:</b> Added has_any_column_privilege() function",
			"<b>PostgreSQL compatibility:</b> Added pg_get_keywords() function",
			"<b>Performance:</b> 300x performance improvement for calculating table sizes via pg_total_relation_size()",
			"Various bug fixes and stability improvements"
		]
	}
]
